<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
<!-- 	<resources location="/resources/js/" mapping="/js/**" /> -->
<!-- 	<resources location="/resources/css/" mapping="/css/**" /> -->
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 스프링이 자동으로 읽도록 등록 -->
	<context:component-scan base-package="com.kh.firsttravel" />
	<context:component-scan base-package="com.kh.kdw.controller" />
	<context:component-scan base-package="com.kh.kdw.persistence" />
	<context:component-scan base-package="com.kh.kdw.service" />
	<context:component-scan base-package="com.kh.nds.controller" />
	<context:component-scan base-package="com.kh.nds.persistence" />
	<context:component-scan base-package="com.kh.nds.service" />
	<context:component-scan base-package="com.kh.psj.controller" />
	<context:component-scan base-package="com.kh.psj.persistence" />
	<context:component-scan base-package="com.kh.psj.service" />
	<context:component-scan base-package="com.kh.ljh.controller" />
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
<!-- 	업로드 경로 설정: H:/upload -->
<!-- 	String uploadPath = new String("H:/upload"); -->
	<beans:bean class="java.lang.String" id="uploadPath">
		<beans:constructor-arg value="\\192.168.0.127\shared\upload_team2"/>
	</beans:bean>
	
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!-- 	10 * 1024 * 1024 : 10MB -->
	<beans:property name="maxUploadSize" value="10485760"/>
	</beans:bean>
	
	<!-- 인터셉터 -->
	
	<!-- **, * 패턴 사용가능 --><!-- mapping path가 할 것을 가로 채서 먼저 할일을 정한다. -->
	
</beans:beans>
